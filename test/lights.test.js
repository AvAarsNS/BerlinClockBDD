const {
  turnOnTheTopLight,
  turnOnLightsInSecondRow,
  turnOnLightsInThirdRow,
  turnOnLightsInBottomRow,
  turnOnLightsInTopRow,
} = require("../src/berlinclock");

describe("The Berlin Clock can be used to tell the current time, in hours, minutes and seconds. The clock is read from the top row to the bottom", () => {
  describe("The current hour is denoted by the two top rows:", () => {
    describe("The top row of the Berlin Clock contains four lights, increasing each 5 hours", () => {
      test.each`
        input | expected  | emoji
        ${0}  | ${"OOOO"} | ${"âš«âš«âš«âš«"}
        ${1}  | ${"OOOO"} | ${"âš«âš«âš«âš«"}
        ${2}  | ${"OOOO"} | ${"âš«âš«âš«âš«"}
        ${5}  | ${"ROOO"} | ${"ðŸ”´âš«âš«âš«"}
        ${6}  | ${"ROOO"} | ${"ðŸ”´âš«âš«âš«"}
        ${10} | ${"RROO"} | ${"ðŸ”´ðŸ”´âš«âš«"}
        ${14} | ${"RROO"} | ${"ðŸ”´ðŸ”´âš«âš«"}
        ${15} | ${"RRRO"} | ${"ðŸ”´ðŸ”´ðŸ”´âš«"}
        ${17} | ${"RRRO"} | ${"ðŸ”´ðŸ”´ðŸ”´âš«"}
        ${18} | ${"RRRO"} | ${"ðŸ”´ðŸ”´ðŸ”´âš«"}
        ${20} | ${"RRRR"} | ${"ðŸ”´ðŸ”´ðŸ”´ðŸ”´"}
        ${24} | ${"RRRR"} | ${"ðŸ”´ðŸ”´ðŸ”´ðŸ”´"}
      `("$input hours --> $emoji", ({ input, expected }) => {
        expect(turnOnLightsInTopRow(input)).toEqual(expected);
      });
    });

    describe("The second row of the Berlin Clock contains four lights, increasing each hour. This resets every 5 hours and then a light in the top row turns on.", () => {
      test.each`
        input | expected  | emoji
        ${0}  | ${"OOOO"} | ${"âš«âš«âš«âš«"}
        ${1}  | ${"ROOO"} | ${"ðŸ”´âš«âš«âš«"}
        ${2}  | ${"RROO"} | ${"ðŸ”´ðŸ”´âš«âš«"}
        ${3}  | ${"RRRO"} | ${"ðŸ”´ðŸ”´ðŸ”´âš«"}
        ${4}  | ${"RRRR"} | ${"ðŸ”´ðŸ”´ðŸ”´ðŸ”´"}
        ${5}  | ${"OOOO"} | ${"âš«âš«âš«âš«"}
        ${6}  | ${"ROOO"} | ${"ðŸ”´âš«âš«âš«"}
        ${7}  | ${"RROO"} | ${"ðŸ”´ðŸ”´âš«âš«"}
        ${8}  | ${"RRRO"} | ${"ðŸ”´ðŸ”´ðŸ”´âš«"}
        ${9}  | ${"RRRR"} | ${"ðŸ”´ðŸ”´ðŸ”´ðŸ”´"}
        ${10} | ${"OOOO"} | ${"âš«âš«âš«âš«"}
      `("$input hours --> $emoji", ({ input, expected }) => {
        expect(turnOnLightsInSecondRow(input)).toEqual(expected);
      });
    });
    describe("The hour value is displayed in a 24-hour format. Combining the top two rows, we can tell the current hour", () => {
      it(`When it is 12 o'clock, the top two rows look like this:
          ðŸ”´ðŸ”´âš«âš«
          ðŸ”´ðŸ”´âš«âš«`, () => {
        expect(turnOnLightsInTopRow(12)).toEqual("RROO");
        expect(turnOnLightsInSecondRow(12)).toEqual("RROO");
      });
    });
  });
  describe("The current minute is denoted by the bottom two rows:", () => {
    describe("The third row of the Berlin Clock contains eleven yellow-and-red lights, increasing each 5 minutes. The red ones also denoting 15, 30 and 45 minutes past.", () => {
      test.each`
        input | expected         | emoji
        ${0}  | ${"OOOOOOOOOOO"} | ${"âš«âš«âš«âš«âš«âš«âš«âš«âš«âš«âš«"}
        ${1}  | ${"OOOOOOOOOOO"} | ${"âš«âš«âš«âš«âš«âš«âš«âš«âš«âš«âš«"}
        ${5}  | ${"YOOOOOOOOOO"} | ${"ðŸŸ¡âš«âš«âš«âš«âš«âš«âš«âš«âš«âš«"}
        ${10} | ${"YYOOOOOOOOO"} | ${"ðŸŸ¡ðŸŸ¡âš«âš«âš«âš«âš«âš«âš«âš«âš«"}
        ${15} | ${"YYROOOOOOOO"} | ${"ðŸŸ¡ðŸŸ¡ðŸ”´âš«âš«âš«âš«âš«âš«âš«âš«"}
        ${20} | ${"YYRYOOOOOOO"} | ${"ðŸŸ¡ðŸŸ¡ðŸ”´ðŸŸ¡âš«âš«âš«âš«âš«âš«âš«"}
        ${25} | ${"YYRYYOOOOOO"} | ${"ðŸŸ¡ðŸŸ¡ðŸ”´ðŸŸ¡ðŸŸ¡âš«âš«âš«âš«âš«âš«"}
        ${30} | ${"YYRYYROOOOO"} | ${"ðŸŸ¡ðŸŸ¡ðŸ”´ðŸŸ¡ðŸŸ¡ðŸ”´âš«âš«âš«âš«âš«"}
        ${35} | ${"YYRYYRYOOOO"} | ${"ðŸŸ¡ðŸŸ¡ðŸ”´ðŸŸ¡ðŸŸ¡ðŸ”´ðŸŸ¡âš«âš«âš«âš«"}
        ${40} | ${"YYRYYRYYOOO"} | ${"ðŸŸ¡ðŸŸ¡ðŸ”´ðŸŸ¡ðŸŸ¡ðŸ”´ðŸŸ¡ðŸŸ¡âš«âš«âš«"}
        ${45} | ${"YYRYYRYYROO"} | ${"ðŸŸ¡ðŸŸ¡ðŸ”´ðŸŸ¡ðŸŸ¡ðŸ”´ðŸŸ¡ðŸŸ¡ðŸ”´âš«âš«"}
        ${50} | ${"YYRYYRYYRYO"} | ${"ðŸŸ¡ðŸŸ¡ðŸ”´ðŸŸ¡ðŸŸ¡ðŸ”´ðŸŸ¡ðŸŸ¡ðŸ”´ðŸŸ¡âš«"}
        ${55} | ${"YYRYYRYYRYY"} | ${"ðŸŸ¡ðŸŸ¡ðŸ”´ðŸŸ¡ðŸŸ¡ðŸ”´ðŸŸ¡ðŸŸ¡ðŸ”´ðŸŸ¡ðŸŸ¡"}
      `("$input minutes --> $emoji", ({ input, expected }) => {
        expect(turnOnLightsInThirdRow(input)).toEqual(expected);
      });
    });

    describe("The bottom row of the Berlin Clock contains four lights, where each minute an extra light turns on. Each 5 minutes this resets and a light in the top row turns on.", () => {
      test.each`
        input | expected  | emoji
        ${0}  | ${"OOOO"} | ${"âš«âš«âš«âš«"}
        ${1}  | ${"YOOO"} | ${"ðŸŸ¡âš«âš«âš«"}
        ${2}  | ${"YYOO"} | ${"ðŸŸ¡ðŸŸ¡âš«âš«"}
        ${3}  | ${"YYYO"} | ${"ðŸŸ¡ðŸŸ¡ðŸŸ¡âš«"}
        ${4}  | ${"YYYY"} | ${"ðŸŸ¡ðŸŸ¡ðŸŸ¡ðŸŸ¡"}
        ${5}  | ${"OOOO"} | ${"âš«âš«âš«âš«"}
        ${6}  | ${"YOOO"} | ${"ðŸŸ¡âš«âš«âš«"}
        ${7}  | ${"YYOO"} | ${"ðŸŸ¡ðŸŸ¡âš«âš«"}
        ${8}  | ${"YYYO"} | ${"ðŸŸ¡ðŸŸ¡ðŸŸ¡âš«"}
        ${9}  | ${"YYYY"} | ${"ðŸŸ¡ðŸŸ¡ðŸŸ¡ðŸŸ¡"}
        ${10} | ${"OOOO"} | ${"âš«âš«âš«âš«"}
      `("$input minutes --> $emoji", ({ input, expected }) => {
        expect(turnOnLightsInBottomRow(input)).toEqual(expected);
      });
    });
    describe("Combining the bottom two rows, we can tell the current minute", () => {
      it(`When it is 12:37, the bottom two rows look like this:
          ðŸŸ¡ðŸŸ¡ðŸ”´ðŸŸ¡ðŸŸ¡ðŸ”´ðŸŸ¡âš«âš«âš«âš«
                  ðŸŸ¡ðŸŸ¡âš«âš«`, () => {
        expect(turnOnLightsInThirdRow(37)).toEqual("YYRYYRYOOOO");
        expect(turnOnLightsInBottomRow(37)).toEqual("YYOO");
      });
    });
  });
  describe("The current second can not be distinguished, but you can tell that a second has passed by the top light:", () => {
    describe("The top light of the Berlin Clock should only blink when the amount of seconds is even", () => {
      it("1 --> âš«", () => {
        expect(turnOnTheTopLight(1)).toEqual("O");
      });
      it("2 --> ðŸŸ¡", () => {
        expect(turnOnTheTopLight(2)).toEqual("Y");
      });
    });
  });
});

